<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zaragoto&#39;s blog</title>
    <link>https://zaragoto322.github.io/</link>
    <description>Recent content on zaragoto&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 24 Jul 2021 22:47:03 +0800</lastBuildDate><atom:link href="https://zaragoto322.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue的两个版本</title>
      <link>https://zaragoto322.github.io/posts/vue%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC/</link>
      <pubDate>Sat, 24 Jul 2021 22:47:03 +0800</pubDate>
      
      <guid>https://zaragoto322.github.io/posts/vue%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC/</guid>
      <description>Vue有哪两个版本 Vue有完整版和不完整版（运行时版），文件名分别为Vue.js和Vue.runtime.js。 其中完整版带compiler（编译器），占用了较大的体积。 对于创建标签的方法，两者也有不同。完整版可以写在HTML里或template里；非完整版可以写在render函数里，用h（变量）来创建标签。 一般推荐使用非完整版，然后用vue-loader和bue文件配合使用。  template和render如何使用 如何用codesandbox.io写Vue代码 1.进入codesandbox.io网页，选择Vue ![Image text](https://github.com/zaragoto322/img-folder/blob/master/forblog/01.png)  </description>
    </item>
    
    <item>
      <title>Js的继承</title>
      <link>https://zaragoto322.github.io/posts/js%E7%9A%84%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Mon, 10 May 2021 16:57:55 +0800</pubDate>
      
      <guid>https://zaragoto322.github.io/posts/js%E7%9A%84%E7%BB%A7%E6%89%BF/</guid>
      <description>转载一篇博客，关于js的6种继承方式 https://www.cnblogs.com/ranyonsue/p/11201730.html</description>
    </item>
    
    <item>
      <title>一个加法运算符的例子</title>
      <link>https://zaragoto322.github.io/posts/%E4%B8%80%E4%B8%AA%E5%8A%A0%E6%B3%95%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Wed, 28 Apr 2021 21:30:43 +0800</pubDate>
      
      <guid>https://zaragoto322.github.io/posts/%E4%B8%80%E4%B8%AA%E5%8A%A0%E6%B3%95%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BE%8B%E5%AD%90/</guid>
      <description>对于加法运算符，在应用的过程中有两个例子，如下所示
  let a = 1 console.log( a+++a )
  let a = 1 console.log( a+a++ )
  在例子1中会输出的值为3；在例子2中会输出的值是2
因为在a+++a的执行过程中，实现了a=a++的过程，使得a=2。在（a++）+a的过程中，后面的a的值使用了临时内存里的a的值变成了2，整个过程变成了：（1++）+2=3
在a+a++的过程中，实际上就是a+a，计算完之后a再自增1，故值为2</description>
    </item>
    
    <item>
      <title>博客开通了~</title>
      <link>https://zaragoto322.github.io/posts/%E5%8D%9A%E5%AE%A2%E5%BC%80%E9%80%9A%E4%BA%86~/</link>
      <pubDate>Wed, 28 Apr 2021 20:46:52 +0800</pubDate>
      
      <guid>https://zaragoto322.github.io/posts/%E5%8D%9A%E5%AE%A2%E5%BC%80%E9%80%9A%E4%BA%86~/</guid>
      <description>大家好~ 我的博客开通了，希望能写出一些好内容</description>
    </item>
    
  </channel>
</rss>
